{"ast":null,"code":"import { createActions, handleActions } from \"redux-actions\";\n\n/* 초기 state값 */\nconst initialState = {};\n\n/* Action Types (User) */ // 타입 별 생성되는 액션 함수 이름(LARGE_SNAKE_CASE -> camelCase)\nexport const LOGIN = 'user/LOGIN'; // -> login()\nexport const RESET_LOGIN_USER = 'user/RESET_LOGIN_USER'; // -> resetLoginUser()\n\n/* Action Functions (User) */\nexport const {\n  user: {\n    login,\n    resetLoginUser\n  }\n} = createActions({\n  [LOGIN]: res => ({\n    res\n  }),\n  [RESET_LOGIN_USER]: (res = initialState) => ({\n    res\n  })\n});\n\n/* Reducer (User) */\nconst userReducer = handleActions({\n  [LOGIN]: (state, {\n    payload: {\n      res\n    }\n  }) => {\n    if (res) {\n      /* localStorage에 로그인 상태 저장 */\n      localStorage.setItem(\"isLogin\", true); // localStorage가 무엇인지는 검색해서 (가볍게)공부해보세요\n    } else {\n      res = {\n        message: 'LOGIN_FAIL'\n      };\n    }\n    return res;\n  },\n  [RESET_LOGIN_USER]: (state, {\n    payload: {\n      res\n    }\n  }) => {\n    return res;\n  }\n}, initialState);\nexport default userReducer;","map":{"version":3,"names":["createActions","handleActions","initialState","LOGIN","RESET_LOGIN_USER","user","login","resetLoginUser","res","userReducer","state","payload","localStorage","setItem","message"],"sources":["C:/myWs/08_React/06_Redux/04_redux-project-structure2/src/modules/UserModule.js"],"sourcesContent":["import { createActions, handleActions } from \"redux-actions\";\r\n\r\n/* 초기 state값 */\r\nconst initialState = {};\r\n\r\n/* Action Types (User) */\t\t\t\t\t\t\t\t\t// 타입 별 생성되는 액션 함수 이름(LARGE_SNAKE_CASE -> camelCase)\r\nexport const LOGIN = 'user/LOGIN';\t\t\t\t\t\t\t// -> login()\r\nexport const RESET_LOGIN_USER = 'user/RESET_LOGIN_USER';\t// -> resetLoginUser()\r\n\r\n/* Action Functions (User) */\r\nexport const { user: { login, resetLoginUser } } = createActions({\r\n\t[LOGIN]: (res) => ({ res }),\r\n\t[RESET_LOGIN_USER]: (res = initialState) => ({ res }),\r\n});\r\n\r\n/* Reducer (User) */\r\nconst userReducer = handleActions(\r\n\t{\r\n\t\t[LOGIN]: (state, { payload: { res } }) => {\r\n\r\n\t\t\tif (res) {\r\n\t\t\t\t/* localStorage에 로그인 상태 저장 */\r\n\t\t\t\tlocalStorage.setItem(\"isLogin\", true);\t// localStorage가 무엇인지는 검색해서 (가볍게)공부해보세요\r\n\t\t\t} else {\r\n\t\t\t\tres = { message: 'LOGIN_FAIL' };\r\n\t\t\t}\r\n\r\n\t\t\treturn res;\r\n\r\n\t\t},\r\n\t\t[RESET_LOGIN_USER]: (state, { payload: { res } }) => {\r\n\r\n\t\t\treturn res;\r\n\r\n\t\t}\r\n\t},\r\n\tinitialState\r\n);\r\n\r\nexport default userReducer;\r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,aAAa,QAAQ,eAAe;;AAE5D;AACA,MAAMC,YAAY,GAAG,CAAC,CAAC;;AAEvB,0BAAkC;AAClC,OAAO,MAAMC,KAAK,GAAG,YAAY,CAAC,CAAO;AACzC,OAAO,MAAMC,gBAAgB,GAAG,uBAAuB,CAAC,CAAC;;AAEzD;AACA,OAAO,MAAM;EAAEC,IAAI,EAAE;IAAEC,KAAK;IAAEC;EAAe;AAAE,CAAC,GAAGP,aAAa,CAAC;EAChE,CAACG,KAAK,GAAIK,GAAG,KAAM;IAAEA;EAAI,CAAC,CAAC;EAC3B,CAACJ,gBAAgB,GAAG,CAACI,GAAG,GAAGN,YAAY,MAAM;IAAEM;EAAI,CAAC;AACrD,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAGR,aAAa,CAChC;EACC,CAACE,KAAK,GAAG,CAACO,KAAK,EAAE;IAAEC,OAAO,EAAE;MAAEH;IAAI;EAAE,CAAC,KAAK;IAEzC,IAAIA,GAAG,EAAE;MACR;MACAI,YAAY,CAACC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACNL,GAAG,GAAG;QAAEM,OAAO,EAAE;MAAa,CAAC;IAChC;IAEA,OAAON,GAAG;EAEX,CAAC;EACD,CAACJ,gBAAgB,GAAG,CAACM,KAAK,EAAE;IAAEC,OAAO,EAAE;MAAEH;IAAI;EAAE,CAAC,KAAK;IAEpD,OAAOA,GAAG;EAEX;AACD,CAAC,EACDN,YACD,CAAC;AAED,eAAeO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}