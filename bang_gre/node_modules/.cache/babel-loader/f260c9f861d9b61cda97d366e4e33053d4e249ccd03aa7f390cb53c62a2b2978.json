{"ast":null,"code":"var _jsxFileName = \"C:\\\\myWs\\\\08_React\\\\06_Redux\\\\04_redux-project-structure2\\\\src\\\\components\\\\form\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from 'react-router-dom';\nimport { callLoginAPI } from '../../apis/UserAPICalls';\nimport { resetLoginUser } from \"../../modules/UserModule\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.userReducer);\n  const isAuthorized = !!localStorage.getItem('isLogin');\n\n  /* input 태그 입력 값 state 관리 */\n  const [loginInfo, setLoginInfo] = useState({\n    id: '',\n    password: ''\n  });\n\n  /* 입력 값 변경 시 이벤트 핸들러 */\n  const onChangeHandler = e => {\n    setLoginInfo({\n      ...loginInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  /* 로그인 버튼 클릭 시 동작 */\n  const onClickHandler = () => {\n    /* loginInfo에 대한 유효성 검사 후 호출 */\n    dispatch(callLoginAPI(loginInfo));\n  };\n\n  /* 로그인 요청 후 성공 or 실패 동작 */\n  useEffect(() => {\n    if (result !== null && result !== void 0 && result.message) {\n      alert('아이디와 비밀번호를 확인해주세요');\n      setLoginInfo({\n        id: '',\n        password: ''\n      });\n      dispatch(resetLoginUser());\n    } else if (isAuthorized) {\n      navigate('/');\n    }\n  },\n  // eslint-disable-next-line\n  [result]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: loginInfo.id,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PW : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: loginInfo.password,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandler,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(LoginForm, \"5K++E4h2znUFY/okJgzr2GoLrk8=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","useNavigate","callLoginAPI","resetLoginUser","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","navigate","dispatch","result","state","userReducer","isAuthorized","localStorage","getItem","loginInfo","setLoginInfo","id","password","onChangeHandler","e","target","name","value","onClickHandler","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/myWs/08_React/06_Redux/04_redux-project-structure2/src/components/form/LoginForm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { callLoginAPI } from '../../apis/UserAPICalls';\r\nimport { resetLoginUser } from \"../../modules/UserModule\";\r\n\r\n\r\nfunction LoginForm() {\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\tconst result = useSelector(state => state.userReducer);\r\n\tconst isAuthorized = !!localStorage.getItem('isLogin');\r\n\r\n\t/* input 태그 입력 값 state 관리 */\r\n\tconst [loginInfo, setLoginInfo] = useState(\r\n\t\t{\r\n\t\t\tid: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t);\r\n\r\n\t/* 입력 값 변경 시 이벤트 핸들러 */\r\n\tconst onChangeHandler = (e) => {\r\n\t\tsetLoginInfo(\r\n\t\t\t{\r\n\t\t\t\t...loginInfo,\r\n\t\t\t\t[e.target.name]: e.target.value\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t/* 로그인 버튼 클릭 시 동작 */\r\n\tconst onClickHandler = () => {\r\n\r\n\t\t/* loginInfo에 대한 유효성 검사 후 호출 */\r\n\t\tdispatch(callLoginAPI(loginInfo));\r\n\r\n\t}\r\n\r\n\t/* 로그인 요청 후 성공 or 실패 동작 */\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (result?.message) {\r\n\t\t\t\talert('아이디와 비밀번호를 확인해주세요');\r\n\t\t\t\tsetLoginInfo(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: '',\r\n\t\t\t\t\t\tpassword: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tdispatch(resetLoginUser());\r\n\t\t\t} else if (isAuthorized) {\r\n\t\t\t\tnavigate('/');\r\n\t\t\t}\r\n\t\t}, // eslint-disable-next-line\r\n\t\t[result]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<label>ID : </label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\tvalue={loginInfo.id}\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t<label>PW : </label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tvalue={loginInfo.password}\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={onClickHandler}>로그인</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default LoginForm;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,cAAc,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,MAAM,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,WAAW,CAAC;EACtD,MAAMC,YAAY,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;;EAEtD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CACzC;IACCsB,EAAE,EAAE,EAAE;IACNC,QAAQ,EAAE;EACX,CACD,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC9BJ,YAAY,CACX;MACC,GAAGD,SAAS;MACZ,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC3B,CACD,CAAC;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAE5B;IACAhB,QAAQ,CAACT,YAAY,CAACgB,SAAS,CAAC,CAAC;EAElC,CAAC;;EAED;EACArB,SAAS,CACR,MAAM;IACL,IAAIe,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEgB,OAAO,EAAE;MACpBC,KAAK,CAAC,mBAAmB,CAAC;MAC1BV,YAAY,CACX;QACCC,EAAE,EAAE,EAAE;QACNC,QAAQ,EAAE;MACX,CACD,CAAC;MACDV,QAAQ,CAACR,cAAc,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAIY,YAAY,EAAE;MACxBL,QAAQ,CAAC,GAAG,CAAC;IACd;EACD,CAAC;EAAE;EACH,CAACE,MAAM,CACR,CAAC;EAED,oBACCP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACCzB,OAAA;MAAAyB,QAAA,gBACCzB,OAAA;QAAAyB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB7B,OAAA;QACC8B,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,IAAI;QACTC,KAAK,EAAER,SAAS,CAACE,EAAG;QACpBgB,QAAQ,EAAEd;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,gBAEF,eAAA7B,OAAA;QAAAyB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB7B,OAAA;QACC8B,IAAI,EAAC,UAAU;QACfV,IAAI,EAAC,UAAU;QACfC,KAAK,EAAER,SAAS,CAACG,QAAS;QAC1Be,QAAQ,EAAEd;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF7B,OAAA;QAAQgC,OAAO,EAAEV,cAAe;QAAAG,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACL,CAAC;AAEL;AAACzB,EAAA,CA1EQD,SAAS;EAAA,QAEAP,WAAW,EACXF,WAAW,EACbC,WAAW;AAAA;AAAAsC,EAAA,GAJlB9B,SAAS;AA4ElB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}